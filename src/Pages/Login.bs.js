// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Url from "../Url.bs.js";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as $$Promise from "reason-promise/src/js/promise.bs.js";
import * as Belt_Map from "rescript/lib/es6/belt_Map.js";
import * as LoginForm from "../LoginForm.bs.js";
import * as KratosClient from "@ory/kratos-client";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";

var selfServeEndpoint = "http://127.0.0.1:4433/self-service/login/browser";

var opts = {
  basePath: "http://127.0.0.1:4433"
};

var api = new KratosClient.PublicApi(new KratosClient.Configuration(opts));

function Login(Props) {
  React.useEffect((function () {
          var url = RescriptReactRouter.useUrl(undefined, undefined);
          var id = Belt_Map.get(Url.parseSearchParams(url), "flow");
          if (id !== undefined) {
            $$Promise.get($$Promise.Js.$$catch(api.getSelfServiceLoginFlow(id), (function (err) {
                        console.log(err);
                        return $$Promise.Js.rejected(err);
                      })), (function (res) {
                    var interestingConfig = Js_dict.get(res.data.methods, "password");
                    console.log(interestingConfig);
                    
                  }));
          } else {
            window.location.href = selfServeEndpoint;
          }
          
        }), []);
  return React.createElement("div", undefined, React.createElement(LoginForm.make, {}));
}

var make = Login;

export {
  selfServeEndpoint ,
  opts ,
  api ,
  make ,
  
}
/* api Not a pure module */
