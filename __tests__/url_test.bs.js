// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Url = require("../src/Url.bs.js");
var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var Belt_Map = require("rescript/lib/js/belt_Map.js");

Jest.describe("parseSearchParams", (function (param) {
        Jest.test("returns search params as key value pairs", (function (param) {
                var params = Url.parseSearchParams({
                      path: {
                        hd: "login",
                        tl: /* [] */0
                      },
                      hash: "",
                      search: "flow=foobar"
                    });
                return Jest.Expect.toBe("foobar", Jest.Expect.expect(Belt_Map.get(params, "flow")));
              }));
        Jest.test("returns nothing is key is not paired with value", (function (param) {
                var test_path = {
                  hd: "login",
                  tl: /* [] */0
                };
                var test = {
                  path: test_path,
                  hash: "",
                  search: "flow"
                };
                var params = Url.parseSearchParams(test);
                return Jest.Expect.toBe(true, Jest.Expect.expect(Belt_Map.isEmpty(params)));
              }));
        Jest.test("returns empty map if no search params exist", (function (param) {
                var test_path = {
                  hd: "",
                  tl: /* [] */0
                };
                var test = {
                  path: test_path,
                  hash: "",
                  search: ""
                };
                var params = Url.parseSearchParams(test);
                return Jest.Expect.toBe(true, Jest.Expect.expect(Belt_Map.isEmpty(params)));
              }));
        return Jest.test("returns multiple search params as key value pairs", (function (param) {
                      var test_path = {
                        hd: "login",
                        tl: /* [] */0
                      };
                      var test = {
                        path: test_path,
                        hash: "",
                        search: "search=coffee&referrer=shop"
                      };
                      var expected = Belt_Map.set(Belt_Map.set(Belt_Map.make(Url.SearchKeyCmp), "search", "coffee"), "referrer", "shop");
                      var params = Url.parseSearchParams(test);
                      return Jest.Expect.toEqual(expected, Jest.Expect.expect(params));
                    }));
      }));

/*  Not a pure module */
