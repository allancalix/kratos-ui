// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var JestDom = require("bs-jest-dom/src/JestDom.bs.js");
var DynamicInput = require("../../src/Components/DynamicInput.bs.js");
var ReactTestingLibrary = require("@rescriptbr/react-testing-library/src/ReactTestingLibrary.bs.js");

Jest.describe("DynamicInputComponent", (function (param) {
        var attrs = {
          disabled: false,
          label: undefined,
          name: "password",
          pattern: undefined,
          required: true,
          type: "password",
          value: undefined
        };
        var node_message = [];
        var node_meta = {
          label: undefined
        };
        var node = {
          attributes: attrs,
          group: "password",
          message: node_message,
          meta: node_meta,
          type: "input"
        };
        var metaWithLabel = {
          label: {
            context: undefined,
            id: 10,
            text: "Cool Label",
            type: "info"
          }
        };
        Jest.test("when label is provided then matches expected", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(ReactTestingLibrary.render(undefined, undefined, undefined, undefined, undefined, React.createElement(DynamicInput.make, {
                                        node: {
                                          attributes: attrs,
                                          group: "password",
                                          message: node_message,
                                          meta: metaWithLabel,
                                          type: "input"
                                        }
                                      })).container));
              }));
        Jest.test("when no label is provided then matches snapshot", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(ReactTestingLibrary.render(undefined, undefined, undefined, undefined, undefined, React.createElement(DynamicInput.make, {
                                        node: node
                                      })).container));
              }));
        return Jest.test("when label is provided then has visible label", (function (param) {
                      var partial_arg = {
                        NAME: "Str",
                        VAL: "Cool Label"
                      };
                      var arg = function (param) {
                        return JestDom.toHaveTextContent(partial_arg, param);
                      };
                      var partial_arg$1 = {
                        NAME: "Str",
                        VAL: "label"
                      };
                      var arg$1 = function (param, param$1) {
                        return ReactTestingLibrary.getByTestId(partial_arg$1, param, param$1);
                      };
                      return Curry._2(arg, undefined, expect(Curry._2(arg$1, undefined, ReactTestingLibrary.render(undefined, undefined, undefined, undefined, undefined, React.createElement(DynamicInput.make, {
                                                  node: {
                                                    attributes: attrs,
                                                    group: "password",
                                                    message: node_message,
                                                    meta: metaWithLabel,
                                                    type: "input"
                                                  }
                                                })))));
                    }));
      }));

/*  Not a pure module */
